// <auto-generated />
using System;
using COLID.AppDataService.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20231103094450_addedShowUserInformationFlagDataMarketplace")]
    partial class addedShowUserInformationFlagDataMarketplace
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.ApplicationVersion", b =>
                {
                    b.Property<string>("Application")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("application");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("release_date");

                    b.Property<string>("PipelineId")
                        .HasColumnType("longtext")
                        .HasColumnName("pipeline_id");

                    b.HasKey("Application", "ReleaseDate")
                        .HasName("pk_application_versions");

                    b.ToTable("application_versions");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.ColidEntrySubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ColidPidUri")
                        .HasColumnType("longtext")
                        .HasColumnName("colid_pid_uri");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Note")
                        .HasColumnType("longtext")
                        .HasColumnName("note");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_colid_entry_subscriptions");

                    b.HasIndex("UserId");

                    b.ToTable("colid_entry_subscriptions");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.ConsumerGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("uri");

                    b.HasKey("Id")
                        .HasName("pk_consumer_groups");

                    b.ToTable("consumer_groups");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.FavoritesList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_favorites_lists");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("favorites_lists");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.FavoritesListEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("FavoritesListId")
                        .HasColumnType("int")
                        .HasColumnName("favorites_list_id");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("PIDUri")
                        .HasColumnType("longtext")
                        .HasColumnName("piduri");

                    b.Property<string>("PersonalNote")
                        .HasColumnType("longtext")
                        .HasColumnName("personal_note");

                    b.HasKey("Id")
                        .HasName("pk_favorites_list_entries");

                    b.HasIndex("FavoritesListId");

                    b.ToTable("favorites_list_entries");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("longtext")
                        .HasColumnName("additional_info");

                    b.Property<string>("Body")
                        .HasColumnType("longtext")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeleteOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("delete_on");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<DateTime?>("ReadOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("read_on");

                    b.Property<DateTime?>("SendOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("send_on");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext")
                        .HasColumnName("subject");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_messages");

                    b.HasIndex("UserId");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.MessageConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("DeleteInterval")
                        .HasColumnType("int")
                        .HasColumnName("delete_interval");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int>("SendInterval")
                        .HasColumnType("int")
                        .HasColumnName("send_interval");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_message_configs");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("message_configs");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.MessageTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Body")
                        .HasColumnType("longtext")
                        .HasColumnName("body");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Subject")
                        .HasColumnType("longtext")
                        .HasColumnName("subject");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_message_templates");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("message_templates");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.SearchFilterDataMarketplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("FilterJson")
                        .HasColumnType("longtext")
                        .HasColumnName("filter_json");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("PidUri")
                        .HasColumnType("longtext")
                        .HasColumnName("pid_uri");

                    b.Property<string>("SearchTerm")
                        .HasColumnType("longtext")
                        .HasColumnName("search_term");

                    b.Property<int?>("StoredQueryId")
                        .HasColumnType("int")
                        .HasColumnName("stored_query_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_search_filter_data_marketplace");

                    b.HasIndex("StoredQueryId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("search_filter_data_marketplace");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.SearchFilterEditor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("FilterJson")
                        .HasColumnType("longtext")
                        .HasColumnName("filter_json");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.HasKey("Id")
                        .HasName("pk_search_filters_editor");

                    b.ToTable("search_filters_editor");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.StoredQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int>("ExecutionInterval")
                        .HasColumnType("int")
                        .HasColumnName("execution_interval");

                    b.Property<DateTime?>("LatestExecutionDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("latest_execution_date");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int>("NumberSearchResults")
                        .HasColumnType("int")
                        .HasColumnName("number_search_results");

                    b.Property<string>("SearchResultHash")
                        .HasColumnType("longtext")
                        .HasColumnName("search_result_hash");

                    b.HasKey("Id")
                        .HasName("pk_stored_queries");

                    b.ToTable("stored_queries");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<int?>("DefaultConsumerGroupId")
                        .HasColumnType("int")
                        .HasColumnName("default_consumer_group_id");

                    b.Property<int?>("DefaultSearchFilterDataMarketplace")
                        .HasColumnType("int")
                        .HasColumnName("default_search_filter_data_marketplace");

                    b.Property<string>("Department")
                        .HasColumnType("longtext")
                        .HasColumnName("department");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("email_address");

                    b.Property<DateTime?>("LastLoginDataMarketplace")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login_data_marketplace");

                    b.Property<DateTime?>("LastLoginEditor")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_login_editor");

                    b.Property<DateTime?>("LastTimeChecked")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_time_checked");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int?>("SearchFilterEditorId")
                        .HasColumnType("int")
                        .HasColumnName("search_filter_editor_id");

                    b.Property<bool>("ShowUserInformationFlagDataMarketplace")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("show_user_information_flag_data_marketplace");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("DefaultConsumerGroupId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SearchFilterEditorId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.WelcomeMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modified_at");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_welcome_messages");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("welcome_messages");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.ColidEntrySubscription", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.User", "User")
                        .WithMany("ColidEntrySubscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_colid_entry_subscriptions_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.FavoritesList", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.User", "User")
                        .WithMany("FavoritesLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_favorites_lists_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.FavoritesListEntry", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.FavoritesList", "FavoritesLists")
                        .WithMany("FavoritesListEntries")
                        .HasForeignKey("FavoritesListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_favorites_list_entries_favorites_lists_favorites_list_id");

                    b.Navigation("FavoritesLists");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.Message", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_messages_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.MessageConfig", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.User", "User")
                        .WithOne("MessageConfig")
                        .HasForeignKey("COLID.AppDataService.Common.DataModel.MessageConfig", "UserId")
                        .HasConstraintName("fk_message_configs_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.SearchFilterDataMarketplace", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.StoredQuery", "StoredQuery")
                        .WithOne("SearchFilterDataMarketplace")
                        .HasForeignKey("COLID.AppDataService.Common.DataModel.SearchFilterDataMarketplace", "StoredQueryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_search_filter_data_marketplace_stored_queries_stored_query_id");

                    b.HasOne("COLID.AppDataService.Common.DataModel.User", "User")
                        .WithMany("SearchFiltersDataMarketplace")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_search_filter_data_marketplace_users_user_id");

                    b.Navigation("StoredQuery");

                    b.Navigation("User");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.User", b =>
                {
                    b.HasOne("COLID.AppDataService.Common.DataModel.ConsumerGroup", "DefaultConsumerGroup")
                        .WithMany("Users")
                        .HasForeignKey("DefaultConsumerGroupId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_users_consumer_groups_default_consumer_group_id");

                    b.HasOne("COLID.AppDataService.Common.DataModel.SearchFilterEditor", "SearchFilterEditor")
                        .WithMany("Users")
                        .HasForeignKey("SearchFilterEditorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_users_search_filters_editor_search_filter_editor_id");

                    b.Navigation("DefaultConsumerGroup");

                    b.Navigation("SearchFilterEditor");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.ConsumerGroup", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.FavoritesList", b =>
                {
                    b.Navigation("FavoritesListEntries");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.SearchFilterEditor", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.StoredQuery", b =>
                {
                    b.Navigation("SearchFilterDataMarketplace");
                });

            modelBuilder.Entity("COLID.AppDataService.Common.DataModel.User", b =>
                {
                    b.Navigation("ColidEntrySubscriptions");

                    b.Navigation("FavoritesLists");

                    b.Navigation("MessageConfig");

                    b.Navigation("Messages");

                    b.Navigation("SearchFiltersDataMarketplace");
                });
#pragma warning restore 612, 618
        }
    }
}
