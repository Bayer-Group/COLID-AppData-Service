# CICD stages
stages:
  - test-unit
  - test-integration
  - test-functional
  - deploy

# The test script: Runs the functional, and unit tests of .NET Core
# 
# TEST_PROJECT_NAME       # The name of the csharp test project
.test_script: &test_script
  image: mcr.microsoft.com/dotnet/core/sdk:3.1
  dependencies: []
  script:
    - echo "TEST_PROJECT_NAME=$TEST_PROJECT_NAME"
    - dotnet restore ./tests/$TEST_PROJECT_NAME/$TEST_PROJECT_NAME.csproj
    - dotnet test ./tests/$TEST_PROJECT_NAME/$TEST_PROJECT_NAME.csproj

.test_functional_script: &test_functional_script
  <<: *test_script
  stage: test-functional
  variables:
    TEST_PROJECT_NAME: "FunctionalTests"

.test_integration_script: &test_integration_script
  <<: *test_script
  stage: test-integration
  variables:
    TEST_PROJECT_NAME: "IntegrationTests"

.test_unit_script: &test_unit_script
  <<: *test_script
  stage: test-unit
  variables:
    TEST_PROJECT_NAME: "UnitTests"

test-functional:dev:
  <<: *test_functional_script
  tags:
    - vanilla-dev # use vanilla-dev for all work that not need Docker-in-Docker and for all deployments to DEV cluster
  only:
    - /^issues\/.*$/
    - /^hotfixes\/.*$/
    - develop
    
test-functional:qa:
  <<: *test_functional_script
  tags:
    - vanilla-dev # use vanilla-dev for all work that not need Docker-in-Docker and for all deployments to DEV cluster
  only:
    - release
    
test-functional:prod:
  <<: *test_functional_script
  tags:
    - vanilla-prod
  only:
    - master

test-integration:dev:
  <<: *test_integration_script
  tags:
    - vanilla-dev # use vanilla-dev for all work that not need Docker-in-Docker and for all deployments to DEV cluster
  only:
    - /^issues\/.*$/
    - /^hotfixes\/.*$/
    - develop
    
test-integration:qa:
  <<: *test_integration_script
  tags:
    - vanilla-dev # use vanilla-dev for all work that not need Docker-in-Docker and for all deployments to DEV cluster
  only:
    - release
    
test-integration:prod:
  <<: *test_integration_script
  tags:
    - vanilla-prod
  only:
    - master

test-unit:dev:
  <<: *test_unit_script
  tags:
    - vanilla-dev # use vanilla-dev for all work that not need Docker-in-Docker and for all deployments to DEV cluster
  only:
    - /^issues\/.*$/
    - /^hotfixes\/.*$/
    - develop

test-unit:qa:
  <<: *test_unit_script
  tags:
    - vanilla-dev # use vanilla-dev for all work that not need Docker-in-Docker and for all deployments to DEV cluster
  only:
    - release

test-unit:prod:
  <<: *test_unit_script
  tags:
    - vanilla-prod
  only:
    - master 

trigger-deployment:
  stage: deploy
  image: curlimages/curl
  tags:
    - dind-dev
  script:
    - curl -X POST -F token=$DEPLOYMENT_TOKEN -F ref=$CI_COMMIT_REF_NAME $DEPLOYMENT_REPO_URL
  only:
    - develop
    - release
    - master